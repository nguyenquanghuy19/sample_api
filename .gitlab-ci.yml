stages:
  - build
  - send_noti

build_adroid:
  image: cirrusci/flutter:stable
  stage: build
  rules:
     - if: $CI_PIPELINE_SOURCE == "schedule"
       when: always
       allow_failure: false
     - when: manual
       allow_failure: true
  script:
    - flutter build apk --release --no-sound-null-safety -t lib/main_product.dart
  artifacts:
    paths:
    - build/app/outputs/flutter-apk
  tags:
    - docker

build_ios:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
      allow_failure: false
    - when: manual
      allow_failure: true
  script:
    - cd ios && cat $EXPORT_INFO > Export.plist && export LANG=en_US.UTF-8 && flutter clean && flutter pub get && rm -rf Podfile.lock Pods && pod deintegrate && pod update && pod install
    - cat $CONFIG > config.sh && chmod +x config.sh && ./config.sh
    - security unlock-keychain -p Rikkei@123 login.keychain
    - xcodebuild clean archive -scheme Runner -workspace Runner.xcworkspace -configuration Release -archivePath ../builds/elearning.xcarchive
    - xcodebuild -exportArchive -archivePath ../builds/elearning.xcarchive -exportPath ../builds/ -exportOptionsPlist Export.plist
  artifacts:
    paths:
    - builds
  tags:
    - ios

noti_android:
  stage: send_noti
  image: python:latest
  rules:
     - if: $CI_PIPELINE_SOURCE == "schedule"
       when: always
       allow_failure: false
     - when: manual
       allow_failure: true
  script:
    - pip install awscli && pip install httplib2
    - aws configure set region $AWS_DEFAULT_REGION
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws s3 rm s3://devops-elms/*.apk --recursive
    - aws s3 cp $PATH_APK/app-release.apk s3://devops-elms/
    - cat $SEND_NOTI_ANDROID > send-noti-android.py
    - python3 send-noti-android.py
  tags:
    - docker
  
noti_ios:
  stage: send_noti
  image: python:latest
  rules:
     - if: $CI_PIPELINE_SOURCE == "schedule"
       when: always
       allow_failure: false
     - when: manual
       allow_failure: true
  script:
    - pip install awscli && pip install httplib2
    - aws configure set region $AWS_DEFAULT_REGION
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws s3 rm s3://devops-elms/*.ipa --recursive
    - aws s3 cp builds/elearning.ipa s3://devops-elms/
    - cat $SEND_NOTI_IOS > send-noti-ios.py
    - python3 send-noti-ios.py
  tags:
    - docker
  
  